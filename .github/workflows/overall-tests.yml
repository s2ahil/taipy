name: Overall Test Workflow

on:
  push:
    branches: [ develop, dev/*, release/* ]
  pull_request:
    branches: [ develop, dev/*, release/* ]

jobs:
  partial-tests:
    uses: ./.github/workflows/partial-tests.yml

  overall-tests:
    needs: [partial-tests]
    timeout-minutes: 40
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python-version}}

      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python

      - name: Install Dependencies
        run: pipenv install --dev --python=${{ matrix.python-version }}

      - name: Setup LibMagic (MacOS)
        if: matrix.os == 'macos-latest'
        run: brew install libmagic

      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Frontend Bundle Build
        run: pipenv run python tools/frontend/bundle_build.py

      - name: Install Playwright
        run: pipenv run playwright install chromium --with-deps

      - name: Pytest
        run: pipenv run pytest -m "not orchestrator_dispatcher and not standalone" --cov=taipy --cov-append --cov-report="xml:overall-coverage.xml" --cov-report term-missing tests

      - name: Coverage
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-xml-coverage-path: ./overall-coverage.xml
          title: Taipy Overall Coverage Report

  submit_tests:
    needs: [partial-tests]
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python-version}}

      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python

      - name: Install Dependencies
        run: pipenv install --dev --python=${{ matrix.python-version }}

      - name: Setup LibMagic (MacOS)
        if: matrix.os == 'macos-latest'
        run: brew install libmagic

      - name: Pytest Core orchestrator_dispatcher
        run: pipenv run pytest -m "orchestrator_dispatcher" tests/core

  standalone_tests:
    needs: [partial-tests]
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python-version}}

      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python

      - name: Install Dependencies
        run: pipenv install --dev --python=${{ matrix.python-version }}

      - name: Setup LibMagic (MacOS)
        if: matrix.os == 'macos-latest'
        run: brew install libmagic

      - name: Pytest Core standalone
        run: pipenv run pytest -m "standalone" tests/core
